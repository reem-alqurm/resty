{"version":3,"sources":["Form.js","Header.js","Footer.js","Result.js","my-app.js","reportWebVitals.js","index.js"],"names":["Form","props","addurl","e","preventDefault","newState","url","target","value","method","setstate","handleSubmit","a","fetch","raw","json","data","console","log","handler","changeMethod","setState","state","onSubmit","this","onChange","handelurl","type","name","placeholder","onClick","React","Component","Header","Footer","id","Result","src","App","handleForm","headers","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAuDeA,E,kDAlDX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,OAAS,SAAAC,GACLA,EAAEC,iBACF,IAEMC,EAAW,CAACC,IAFNH,EAAEI,OAAOD,IAAIE,MAEKC,OADfN,EAAEI,OAAOE,OAAOD,OAE/B,EAAKE,SAASL,IAbC,EAenBM,aAfmB,uCAeJ,WAAMR,GAAN,iBAAAS,EAAA,6DACbT,EAAEC,iBADW,SAEGS,MAAMV,EAAEI,OAAOD,IAAIE,OAFtB,cAETM,EAFS,gBAGIA,EAAIC,OAHR,OAGTC,EAHS,OAIbC,QAAQC,IAAI,wBAAyBF,GAGrC,EAAKf,MAAMkB,QAAQH,GAPN,2CAfI,wDAyBrBI,aAAe,SAACjB,GACdA,EAAEC,iBACF,EAAKiB,SAAS,CAAEZ,OAAQN,EAAEI,OAAOC,SAzB/B,EAAKc,MAAQ,CACXhB,IAAM,GACNG,OAAQ,IAJO,E,0CA+BnB,WACE,OACI,8BACE,uBAAMc,SAAUC,KAAKb,aAArB,UACF,0CACA,uBAAOc,SAAUD,KAAKE,UAAUC,KAAK,OAAOC,KAAK,MAAMC,YAAY,wBACnE,yCAHE,IAGoB,uBACpB,wBAAQrB,MAAK,MAASsB,QAASN,KAAKJ,aAApC,iBACA,wBAAQZ,MAAK,OAASsB,QAASN,KAAKJ,aAApC,mBACA,wBAAQZ,MAAK,MAASsB,QAASN,KAAKJ,aAApC,iBACA,wBAAQZ,MAAK,SAAWsB,QAASN,KAAKJ,aAAtC,8B,GA3COW,IAAMC,WCOVC,G,MAPA,WACX,OACI,iCACA,2C,MCKOC,MARf,WACE,OACE,iCACG,mBAAGC,GAAK,UAAR,mD,iBCeQC,E,4JAfb,WACE,OACE,qCACE,qBAAKD,GAAG,QAAR,SAEE,cAAC,IAAD,CAAWA,GAAG,cAAcE,IAAKb,KAAKvB,UAIxC,cAAC,EAAD,W,GAVa8B,IAAMC,WC8BZM,E,kDA5BX,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IAOVsC,WAAa,SAACvB,EAAMwB,GAChB,EAAKnB,SAAS,CACZL,KAAMA,KARR,EAAKM,MAAQ,CACXN,KAAO,IAHM,E,0CAenB,WACI,OACI,qCACC,cAAC,EAAD,IAGG,cAAC,EAAD,CAAMG,QAASK,KAAKe,aACpB,cAAC,EAAD,CAAQE,QAASjB,KAAKF,e,GAvBpBS,IAAMC,WCMTU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.14f12bc8.chunk.js","sourcesContent":["import React from 'react';\nimport './form.scss';\n\nclass Form extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        url : '',\n        method: ''\n      };\n    }\n  \n    addurl = e => {\n        e.preventDefault();\n        const url = e.target.url.value;\n        const method = e.target.method.value;\n        const newState = {url : url , method : method};\n        this.setstate(newState);\n    }\n    handleSubmit = async e => {\n      e.preventDefault();\n      let raw = await fetch(e.target.url.value);\n      let data = await raw.json();\n      console.log('this is data from api', data);\n    \n\n      this.props.handler(data);\n  }\n\n  changeMethod = (e) => {\n    e.preventDefault();\n    this.setState({ method: e.target.value });\n  };\n\n   \n    render() {\n      return (\n          <div>\n            <form onSubmit={this.handleSubmit}>\n          <label>URL :</label>\n          <input onChange={this.handelurl}type=\"text\" name=\"url\" placeholder=\"http://reem.url.com\"/>\n          <button >GO!</button> <br></br>\n            <button value={`GET`} onClick={this.changeMethod}>GET</button>\n            <button value={`POST`}onClick={this.changeMethod}> POST</button>\n            <button value={`PUT`} onClick={this.changeMethod}>PUT</button>\n            <button value={`DELETE`}onClick={this.changeMethod}> DELETE</button>\n        </form>\n           \n            \n          </div>\n      )\n    }\n  }\n\nexport default Form;\n","import React from 'react';\nimport './header.scss';\n\nconst Header = ()=>{\n    return(\n        <header>\n        <h1>RESTy</h1>\n      </header>\n    )\n}\nexport default Header;","import React from 'react';\nimport './footer.scss';\n\nfunction Footer() {\n  return (\n    <footer>\n       <p id = \"footerp\"> &copy; 2021 Code Fellows - Code 401</p>\n        </footer>\n  )\n}\n\nexport default Footer;","import React from \"react\";\nimport Footer from \"./Footer\";\n// import JSONPretty from \"react-json-pretty\";\nimport ReactJson from \"react-json-view\";\n\nclass Result extends React.Component {\n  render() {\n    return (\n      <>\n        <div id=\"mainp\">\n          {/* <JSONPretty id=\"json-pretty\" src={this.props} /> */}\n          <ReactJson id=\"json-pretty\" src={this.props} />\n\n        </div>\n\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default Result;\n","import React from 'react';\nimport Form from './Form';\nimport Header from './Header';\n\nimport Result from './Result';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          data : {}\n         \n        };\n    }\n\n    handleForm = (data, headers) => {\n        this.setState({\n          data: data,\n          \n          });\n    }\n\n    render() {\n        return (\n            <>\n             <Header/>\n    \n   \n                <Form handler={this.handleForm}/>\n                <Result results={this.state}/> \n            </>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './my-app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}